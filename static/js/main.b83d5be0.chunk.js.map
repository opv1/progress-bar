{"version":3,"sources":["context/AppContext.js","context/types.js","context/appReducer.js","utils.js","context/AppState.js","components/ProgressPanel/ProgressPanel.js","components/ControlPanel/ControlPanel.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","createContext","SET_PROGRESS","SET_TIMER","SET_CUSTOM_VALUE","SET_COLOR","SET_ANIMATE","SET_DONE_ANIMATE","SET_ANIMATE_VALUE","SET_ANIMATE_TIME","SET_HIDE","handlers","state","payload","progress","timer","customValue","strokeOuter","animate","doneAnimate","animateValue","animateTime","hide","appReducer","action","type","DEFAULT","randomColor","colorArray","Math","floor","random","length","setTimer","counter","min","sec","AppState","children","useReducer","waitTime","defaultColor","size","strokeWidth","strokeInner","dispatch","secondsCounter","Provider","value","onCustomValue","integerValue","parseInt","onRandomValue","e","preventDefault","onRandomColor","checked","onAnimateValue","onStartAnimate","target","window","intervalId","setInterval","percent","ceil","clearInterval","setTimeout","statusChecked","finalCountdown","startTimer","onHideBlock","ProgressPanel","useContext","useState","offset","setOffset","circleRef","useRef","center","radius","circumference","PI","useEffect","current","style","className","width","opacity","height","stroke","cx","cy","r","ref","strokeDasharray","strokeDashoffset","transform","x","y","Number","ControlPanel","onChange","placeholder","disabled","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b83d5be0.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\nexport const AppContext = createContext()\r\n","export const SET_PROGRESS = 'SET_PROGRESS'\r\nexport const SET_TIMER = 'SET_TIMER'\r\nexport const SET_CUSTOM_VALUE = 'SET_CUSTOM_VALUE'\r\nexport const SET_COLOR = 'SET_COLOR'\r\nexport const SET_ANIMATE = 'SET_ANIMATE'\r\nexport const SET_DONE_ANIMATE = 'SET_DONE_ANIMATE'\r\nexport const SET_ANIMATE_VALUE = 'ANIMATE_VALUE'\r\nexport const SET_ANIMATE_TIME = 'SET_ANIMATE_TIME'\r\nexport const SET_HIDE = 'SET_HIDE'\r\n","import {\r\n  SET_PROGRESS,\r\n  SET_TIMER,\r\n  SET_CUSTOM_VALUE,\r\n  SET_COLOR,\r\n  SET_ANIMATE,\r\n  SET_DONE_ANIMATE,\r\n  SET_ANIMATE_VALUE,\r\n  SET_ANIMATE_TIME,\r\n  SET_HIDE,\r\n} from 'context/types'\r\n\r\nconst handlers = {\r\n  [SET_PROGRESS]: (state, { payload }) => ({\r\n    ...state,\r\n    progress: payload,\r\n  }),\r\n  [SET_TIMER]: (state, { payload }) => ({\r\n    ...state,\r\n    timer: payload,\r\n  }),\r\n  [SET_CUSTOM_VALUE]: (state, { payload }) => ({\r\n    ...state,\r\n    customValue: payload,\r\n  }),\r\n  [SET_COLOR]: (state, { payload }) => ({\r\n    ...state,\r\n    strokeOuter: payload,\r\n  }),\r\n  [SET_ANIMATE]: (state, { payload }) => ({\r\n    ...state,\r\n    animate: payload,\r\n  }),\r\n  [SET_DONE_ANIMATE]: (state, { payload }) => ({\r\n    ...state,\r\n    doneAnimate: payload,\r\n  }),\r\n  [SET_ANIMATE_VALUE]: (state, { payload }) => ({\r\n    ...state,\r\n    animateValue: payload,\r\n  }),\r\n  [SET_ANIMATE_TIME]: (state, { payload }) => ({\r\n    ...state,\r\n    animateTime: payload,\r\n  }),\r\n  [SET_HIDE]: (state) => ({\r\n    ...state,\r\n    hide: !state.hide,\r\n  }),\r\n  DEFAULT: (state) => state,\r\n}\r\n\r\nexport const appReducer = (state, action) => {\r\n  const handler = handlers[action.type] || handlers.DEFAULT\r\n\r\n  return handler(state, action)\r\n}\r\n","export const randomColor = (colorArray) => {\r\n  return colorArray[Math.floor(Math.random() * colorArray.length)]\r\n}\r\n\r\nexport const statusChecked = (target) => {\r\n  target.checked = false\r\n}\r\n\r\nexport const setTimer = (counter) => {\r\n  if (counter >= 0) {\r\n    const min = Math.floor(counter / 60)\r\n    const sec = counter % 60 > 9 ? counter % 60 : `0${counter % 60}`\r\n\r\n    return { min, sec }\r\n  }\r\n}\r\n","import React, { useReducer } from 'react'\r\nimport { AppContext } from 'context/AppContext'\r\nimport { appReducer } from 'context/appReducer'\r\nimport {\r\n  SET_PROGRESS,\r\n  SET_TIMER,\r\n  SET_CUSTOM_VALUE,\r\n  SET_COLOR,\r\n  SET_ANIMATE,\r\n  SET_DONE_ANIMATE,\r\n  SET_ANIMATE_VALUE,\r\n  SET_ANIMATE_TIME,\r\n  SET_HIDE,\r\n} from 'context/types'\r\nimport { randomColor, statusChecked, setTimer } from 'utils'\r\n\r\nfunction AppState({ children }) {\r\n  const initialState = {\r\n    progress: 0,\r\n    timer: '0:00',\r\n    waitTime: 3000,\r\n    customValue: '',\r\n    defaultColor: '#20b7ff',\r\n    colorArray: [\r\n      '#7ea9e1',\r\n      '#ed004f',\r\n      '#00fcf0',\r\n      '#d2fc00',\r\n      '#7bff00',\r\n      '#fa6900',\r\n    ],\r\n    animate: false,\r\n    doneAnimate: false,\r\n    animateValue: '',\r\n    animateTime: 0,\r\n    size: 250,\r\n    strokeWidth: 15,\r\n    strokeInner: '#ffffff',\r\n    strokeOuter: '#20b7ff',\r\n    hide: false,\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(appReducer, initialState)\r\n\r\n  const {\r\n    progress,\r\n    timer,\r\n    waitTime,\r\n    customValue,\r\n    defaultColor,\r\n    colorArray,\r\n    animate,\r\n    doneAnimate,\r\n    animateValue,\r\n    animateTime,\r\n    size,\r\n    strokeWidth,\r\n    strokeInner,\r\n    strokeOuter,\r\n    hide,\r\n  } = state\r\n\r\n  let secondsCounter = animateTime\r\n\r\n  const onCustomValue = (value) => {\r\n    dispatch({ type: SET_CUSTOM_VALUE, payload: value })\r\n\r\n    let integerValue = parseInt(value, 10)\r\n\r\n    if (integerValue && integerValue > 0) {\r\n      if (integerValue > 100) {\r\n        integerValue = 100\r\n      }\r\n\r\n      dispatch({ type: SET_PROGRESS, payload: integerValue })\r\n    } else {\r\n      dispatch({ type: SET_PROGRESS, payload: 0 })\r\n    }\r\n  }\r\n\r\n  const onRandomValue = (e) => {\r\n    e.preventDefault()\r\n\r\n    dispatch({ type: SET_PROGRESS, payload: Math.floor(Math.random() * 101) })\r\n    dispatch({ type: SET_CUSTOM_VALUE, payload: '' })\r\n  }\r\n\r\n  const onRandomColor = (checked) => {\r\n    if (checked) {\r\n      dispatch({ type: SET_COLOR, payload: randomColor(colorArray) })\r\n    } else {\r\n      dispatch({ type: SET_COLOR, payload: defaultColor })\r\n    }\r\n  }\r\n\r\n  const onAnimateValue = (value) => {\r\n    dispatch({ type: SET_ANIMATE_VALUE, payload: value })\r\n    dispatch({ type: SET_ANIMATE_TIME, payload: parseInt(value, 10) })\r\n\r\n    const timer = setTimer(parseInt(value, 10))\r\n\r\n    if (timer) {\r\n      dispatch({ type: SET_TIMER, payload: `${timer.min}:${timer.sec}` })\r\n    }\r\n  }\r\n\r\n  const finalCountdown = (target) => {\r\n    secondsCounter--\r\n\r\n    const percent = Math.ceil(\r\n      ((animateTime - secondsCounter) / animateTime) * 100\r\n    )\r\n\r\n    dispatch({ type: SET_PROGRESS, payload: percent })\r\n\r\n    if (secondsCounter === 0) {\r\n      clearInterval(window.intervalId)\r\n\r\n      dispatch({ type: SET_DONE_ANIMATE, payload: true })\r\n\r\n      return setTimeout(() => {\r\n        statusChecked(target)\r\n\r\n        dispatch({ type: SET_DONE_ANIMATE, payload: false })\r\n        dispatch({ type: SET_ANIMATE, payload: false })\r\n        dispatch({ type: SET_ANIMATE_VALUE, payload: '' })\r\n        dispatch({ type: SET_PROGRESS, payload: 0 })\r\n      }, waitTime)\r\n    }\r\n  }\r\n\r\n  const startTimer = () => {\r\n    const timer = setTimer(secondsCounter)\r\n\r\n    dispatch({ type: SET_TIMER, payload: `${timer.min}:${timer.sec}` })\r\n  }\r\n\r\n  const onStartAnimate = (target) => {\r\n    if (target.checked) {\r\n      dispatch({ type: SET_ANIMATE, payload: true })\r\n      dispatch({ type: SET_CUSTOM_VALUE, payload: '' })\r\n\r\n      window.intervalId = setInterval(() => {\r\n        finalCountdown(target)\r\n        startTimer()\r\n      }, 1000)\r\n    } else {\r\n      dispatch({ type: SET_ANIMATE, payload: false })\r\n      dispatch({ type: SET_PROGRESS, payload: 0 })\r\n\r\n      const timer = setTimer(secondsCounter)\r\n\r\n      dispatch({ type: SET_TIMER, payload: `${timer.min}:${timer.sec}` })\r\n\r\n      clearInterval(window.intervalId)\r\n    }\r\n  }\r\n\r\n  const onHideBlock = () => {\r\n    dispatch({ type: SET_HIDE })\r\n  }\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        progress,\r\n        timer,\r\n        waitTime,\r\n        customValue,\r\n        animate,\r\n        doneAnimate,\r\n        animateValue,\r\n        size,\r\n        strokeWidth,\r\n        strokeInner,\r\n        strokeOuter,\r\n        hide,\r\n        onCustomValue,\r\n        onRandomValue,\r\n        onRandomColor,\r\n        onAnimateValue,\r\n        onStartAnimate,\r\n        onHideBlock,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AppState\r\n","import React, { useContext, useState, useRef, useEffect } from 'react'\r\nimport propTypes from 'prop-types'\r\nimport { AppContext } from 'context/AppContext'\r\nimport 'components/ProgressPanel/ProgressPanel.scss'\r\n\r\nfunction ProgressPanel() {\r\n  const {\r\n    progress,\r\n    timer,\r\n    waitTime,\r\n    doneAnimate,\r\n    animateValue,\r\n    size,\r\n    strokeWidth,\r\n    strokeInner,\r\n    strokeOuter,\r\n    hide,\r\n  } = useContext(AppContext)\r\n\r\n  const [offset, setOffset] = useState(0)\r\n\r\n  const circleRef = useRef(null)\r\n\r\n  const center = size / 2\r\n  const radius = size / 2 - strokeWidth / 2\r\n  const circumference = 2 * Math.PI * radius\r\n\r\n  useEffect(() => {\r\n    const progressOffset = ((100 - progress) / 100) * circumference\r\n\r\n    setOffset(progressOffset)\r\n\r\n    circleRef.current.style = 'transition: stroke-dashoffset 850ms ease-in-out'\r\n  }, [progress, circumference, offset, setOffset])\r\n\r\n  return (\r\n    <div className='progress-panel'>\r\n      {hide ? (\r\n        <span className='progress-hide' style={{ width: `${size}px` }}>\r\n          Progress block is hidden!\r\n        </span>\r\n      ) : (\r\n        <div className='progress-block' style={{ width: `${size}px` }}>\r\n          <span\r\n            className='progress-done'\r\n            style={doneAnimate ? { opacity: '1' } : {}}\r\n          >\r\n            Done! Wait {waitTime / 1000} sec\r\n          </span>\r\n          <svg className='progress-ring' width={size} height={size}>\r\n            <circle\r\n              className='progress-ring__inner'\r\n              stroke={strokeInner}\r\n              strokeWidth={strokeWidth}\r\n              cx={center}\r\n              cy={center}\r\n              r={radius}\r\n            />\r\n            <circle\r\n              className='progress-ring__outer'\r\n              ref={circleRef}\r\n              stroke={strokeOuter}\r\n              strokeWidth={strokeWidth}\r\n              strokeDasharray={circumference}\r\n              strokeDashoffset={offset}\r\n              cx={center}\r\n              cy={center}\r\n              r={radius}\r\n              transform={`rotate(-90, ${center}, ${center})`}\r\n            />\r\n            <text\r\n              className='progress-ring__percent'\r\n              x={`${center}`}\r\n              y={`${center}`}\r\n            >\r\n              {progress}%\r\n            </text>\r\n          </svg>\r\n          <span\r\n            className='progress-timer'\r\n            style={\r\n              animateValue && Number(animateValue) !== 0 ? { opacity: '1' } : {}\r\n            }\r\n          >\r\n            {timer}\r\n          </span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nProgressPanel.propTypes = {\r\n  size: propTypes.number,\r\n  progress: propTypes.number,\r\n  strokeWidth: propTypes.number,\r\n  strokeOne: propTypes.string,\r\n  strokeTwo: propTypes.string,\r\n}\r\n\r\nexport default ProgressPanel\r\n","import React, { useContext } from 'react'\r\nimport { AppContext } from 'context/AppContext'\r\nimport 'components/ControlPanel/ControlPanel.scss'\r\n\r\nfunction ControlPanel() {\r\n  const {\r\n    customValue,\r\n    animate,\r\n    animateValue,\r\n    hide,\r\n    onCustomValue,\r\n    onRandomValue,\r\n    onRandomColor,\r\n    onAnimateValue,\r\n    onStartAnimate,\r\n    onHideBlock,\r\n  } = useContext(AppContext)\r\n\r\n  return (\r\n    <form className='control-panel'>\r\n      <label className='control-label'>\r\n        <input\r\n          className='control-label__input'\r\n          onChange={(e) => onCustomValue(e.target.value)}\r\n          value={customValue}\r\n          type='number'\r\n          placeholder='0'\r\n          disabled={animate || hide}\r\n        />\r\n        Custom value\r\n      </label>\r\n      <div className='control-block'>\r\n        <button\r\n          className='control-block__button'\r\n          onClick={onRandomValue}\r\n          disabled={animate || hide}\r\n        ></button>\r\n      </div>\r\n      <label className='control-label'>\r\n        <input\r\n          onChange={(e) => onRandomColor(e.target.checked)}\r\n          type='checkbox'\r\n          disabled={hide}\r\n        />\r\n        Random color\r\n      </label>\r\n      <div className='control-block'>\r\n        <label className='control-label'>\r\n          <input\r\n            className='control-label__input'\r\n            onChange={(e) => onAnimateValue(e.target.value)}\r\n            value={animateValue}\r\n            type='number'\r\n            placeholder='0'\r\n            disabled={animate || hide}\r\n          />\r\n          Seconds\r\n        </label>\r\n        <label className='control-label'>\r\n          <input\r\n            onChange={(e) => onStartAnimate(e.target)}\r\n            type='checkbox'\r\n            disabled={!animateValue || Number(animateValue) === 0 || hide}\r\n          />\r\n          Animate\r\n        </label>\r\n      </div>\r\n      <label className='control-label'>\r\n        <input onChange={onHideBlock} type='checkbox' disabled={animate} />\r\n        Hide progress panel\r\n      </label>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ControlPanel\r\n","import React from 'react'\nimport ProgressPanel from 'components/ProgressPanel/ProgressPanel'\nimport ControlPanel from 'components/ControlPanel/ControlPanel'\nimport 'App.scss'\n\nfunction App() {\n  return (\n    <div className='app'>\n      <ProgressPanel />\n      <ControlPanel />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport AppState from 'context/AppState'\nimport App from 'App'\nimport 'index.scss'\nimport reportWebVitals from 'reportWebVitals'\n\nReactDOM.render(\n  <AppState>\n    <App />\n  </AppState>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}